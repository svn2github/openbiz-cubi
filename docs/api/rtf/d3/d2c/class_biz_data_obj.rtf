{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BizDataObj Class Reference\par \pard\plain 
{\tc\tcl2 \v BizDataObj}
{\xe \v BizDataObj}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
Inheritance diagram for BizDataObj:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/dba/class_biz_data_obj__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for BizDataObj:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df4/class_biz_data_obj__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b __construct} (&$xmlArr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b validateInput} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b canUpdateRecord} ($record=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b canUpdateRecordCondition} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b canDeleteRecord} ($record=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b canDeleteRecordCondition} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b updateRecord} ($recArr, $oldRecord=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b updateRecords} ($setValue, $condition=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b newRecord} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b insertRecord} ($recArr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b deleteRecord} ($recArr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b deleteRecords} ($condition=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b getOnAuditFields} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b getJoinFields} ($joinDataObj)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b joinRecord} ($joinDataObj, $joinName="")\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b addRecord} ($recArr, &$isParentObjUpdated)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b removeRecord} ($recArr, &$isParentObjUpdated)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cleanCache} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b validateUniqueness} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b generateId} ($isBeforeInsert=true, $tableName=null, $idCloumnName=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b processCascadeAction} ($objRef, $cascadeType)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cascadeDelete} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cascadeUpdate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 27 of file BizDataObj.php.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __construct\:BizDataObj}
{\xe \v BizDataObj\:__construct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
__construct (& {\i $xmlArr})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize {\b BizDataObj_Abstract} with xml array\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $xmlArr} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 35 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        parent::__construct($xmlArr);\par
    \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addRecord\:BizDataObj}
{\xe \v BizDataObj\:addRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
addRecord ( {\i $recArr}, & {\i $isParentObjUpdated})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a new record to current record set\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $recArr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{boolean\cell }{{\i $isParentObjUpdated} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 874 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
     $oldBaseSearchRule=$this->m_BaseSearchRule;\par
     $this->m_BaseSearchRule="";\par
        $result = BizDataObj_Assoc::addRecord($this, $recArr, $isParentObjUpdated);\par
        //$this->m_BaseSearchRule=$oldBaseSearchRule;\par
        return $result;\par
    \}\par
}
}
{\xe \v canDeleteRecord\:BizDataObj}
{\xe \v BizDataObj\:canDeleteRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
canDeleteRecord ( {\i $record} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the current record can be deleted\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 191 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
     if($this->m_DataPermControl=='Y')\par
        \{\par
         $svcObj = BizSystem::GetService(DATAPERM_SERVICE);\par
         if(!$record)\par
         \{\par
          $record = $this->getActiveRecord();\par
         \}\par
         $result = $svcObj->checkDataPerm($record,3,$this);\par
         if($result == false)\par
         \{\par
          return false;\par
         \}\par
        \}\par
     \par
        $result = $this->canDeleteRecordCondition();\par
        return $result;\par
    \}\par
}
}
{\xe \v canDeleteRecordCondition\:BizDataObj}
{\xe \v BizDataObj\:canDeleteRecordCondition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
canDeleteRecordCondition ()}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 211 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{     \par
        if ($this->m_DeleteCondition)\par
        \{\par
            // return Expression::evaluateExpression($this->m_DeleteCondition,$this);\par
            return $this->allowAccess($this->m_DeleteCondition);\par
        \}\par
        return true;\par
    \}    \par
}
}
{\xe \v canUpdateRecord\:BizDataObj}
{\xe \v BizDataObj\:canUpdateRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
canUpdateRecord ( {\i $record} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the current record can be updated\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 156 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
     \par
     if($this->m_DataPermControl=='Y')\par
        \{\par
         $svcObj = BizSystem::GetService(DATAPERM_SERVICE);\par
         if(!$record)\par
         \{\par
          $record = $this->getActiveRecord();\par
         \}\par
         $result = $svcObj->checkDataPerm($record,2,$this);\par
         if($result == false)\par
         \{\par
          return false;\par
         \}\par
        \}\par
     \par
        $result = $this->canUpdateRecordCondition();\par
        return $result;\par
    \}\par
}
}
{\xe \v canUpdateRecordCondition\:BizDataObj}
{\xe \v BizDataObj\:canUpdateRecordCondition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
canUpdateRecordCondition ()}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{     \par
        if ($this->m_UpdateCondition)\par
        \{\par
            //return Expression::evaluateExpression($this->m_UpdateCondition,$this);\par
            return $this->allowAccess($this->m_UpdateCondition);\par
        \}\par
        return true;\par
    \}\par
}
}
{\xe \v cascadeDelete\:BizDataObj}
{\xe \v BizDataObj\:cascadeDelete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cascadeDelete (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run cascade delete \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 725 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        foreach ($this->m_ObjReferences as $objRef) \{\par
            $this->processCascadeAction($objRef, "Delete");\par
        \}\par
    \}\par
}
}
{\xe \v cascadeUpdate\:BizDataObj}
{\xe \v BizDataObj\:cascadeUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cascadeUpdate (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run cascade update \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 736 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        foreach ($this->m_ObjReferences as $objRef) \{\par
            $this->processCascadeAction($objRef, "Update");\par
        \}\par
    \}\par
}
}
{\xe \v cleanCache\:BizDataObj}
{\xe \v BizDataObj\:cleanCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cleanCache ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clean chache\par
{\b BizSystem} $g_BizSystem \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid void \par
}}{
Definition at line 901 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if($this->m_CacheLifeTime > 0)\par
        \{\par
            $cacheSvc = BizSystem::getService(CACHE_SERVICE,1);\par
            $cacheSvc->init($this->m_Name, $this->m_CacheLifeTime);\par
            $cacheSvc->cleanAll();\par
            \par
        \}\par
    \}\par
}
}
{\xe \v deleteRecord\:BizDataObj}
{\xe \v BizDataObj\:deleteRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
deleteRecord ( {\i $recArr})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete current record or delete the given input record\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $recArr} \cell }{- associated array whose keys are field names of this {\b BizDataObj} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean - if return false, the caller can call GetErrorMessage to get the error. \par
}}{
Definition at line 534 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{     \par
        if (!$this->canDeleteRecord())\par
        \{            \par
            $this->m_ErrorMessage = BizSystem::getMessage("DATA_NO_PERMISSION_DELETE",$this->m_Name);\par
            throw new BDOException($this->m_ErrorMessage);\par
            return false;\par
        \}\par
\par
        if ($recArr)\par
            $this->m_BizRecord->setInputRecord($recArr);\par
        else\par
            $this->m_BizRecord->setInputRecord($this->getActiveRecord());\par
\par
        $sql = $this->getSQLHelper()->buildDeleteSQL($this);\par
        if ($sql)\par
        \{\par
            $db = $this->getDBConnection("WRITE");\par
            $db->beginTransaction();\par
            try\par
            \{\par
                $this->cascadeDelete(); // cascade delete\par
\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Delete Sql = $sql");\par
                $db->query($sql);\par
\par
                $db->commit();\par
            \}\par
            catch (Exception $e)\par
            \{\par
                $db->rollBack();\par
                if ($e instanceof BDOException)\par
                    throw $e;\par
                else \{\par
                    BizSystem::log(LOG_ERR, "DATAOBJ", "Query error : ".$e->getMessage());\par
                    $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
                    throw new BDOException($this->m_ErrorMessage);\par
                \}\par
                return false;\par
            \}\par
        \}\par
\par
        //clean cached data\par
        $this->cleanCache();\par
\par
        $this->_postDeleteRecord($this->m_BizRecord->getKeyValue());\par
        return true;\par
    \}\par
}
}
{\xe \v deleteRecords\:BizDataObj}
{\xe \v BizDataObj\:deleteRecords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
deleteRecords ( {\i $condition} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 583 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if (!$this->canDeleteRecordCondition())\par
        \{\par
            throw new BDOException( BizSystem::getMessage("DATA_NO_PERMISSION_DELETE",$this->m_Name) );\par
            return false;\par
        \}\par
\par
\par
        $sql = $this->getSQLHelper()->buildDeleteSQLwithCondition($this,$condition);\par
        $db = $this->getDBConnection("WRITE");\par
\par
        try\par
        \{\par
            if($sql)\par
            \{  // delete joint table first then delete main table's data'\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Delete Sql = $sql");\par
                $db->query($sql);\par
            \}\par
        \}\par
        catch (Exception $e)\par
        \{\par
            BizSystem::log(LOG_ERR, "DATAOBJ", "Query error : ".$e->getMessage());\par
            $db->rollBack(); //if one failed then rollback all\par
            $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
            throw new BDOException($this->m_ErrorMessage);\par
            return false;\par
        \}\par
\par
        //clean cached data\par
        $this->cleanCache();\par
        return true;\par
    \}\par
}
}
{\xe \v generateId\:BizDataObj}
{\xe \v BizDataObj\:generateId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
generateId ( {\i $isBeforeInsert} = {\f2 true},  {\i $tableName} = {\f2 null},  {\i $idCloumnName} = {\f2 null}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate Id according to the IdGeneration attribute\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{boolean\cell }{{\i $isBeforeInsert} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{string\cell }{{\i $tableName} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{string\cell }{{\i $idCloumnName} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid long|string|boolean \par
}}{
Definition at line 417 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        // Identity type id is generated after insert is done.\par
        // If this method is called before insert, return null.\par
        if ($isBeforeInsert && $this->m_IdGeneration == 'Identity')\par
            return null;\par
\par
        if (!$isBeforeInsert && $this->m_IdGeneration != 'Identity')\par
        \{\par
            $this->m_ErrorMessage = BizSystem::getMessage( "DATA_UNABLE_GET_ID",$this->m_Name);\par
            return false;\par
        \}\par
\par
        /* @var $genIdService genIdService */\par
        $genIdService = BizSystem::getService(GENID_SERVICE);\par
        if($this->m_db)\{\par
         $db = $this->m_db;\par
        \}else\{\par
         $db = $this->getDBConnection("READ");\par
        \}\par
        $dbInfo = BizSystem::Configuration()->getDatabaseInfo($this->m_Database);\par
        $dbType = $dbInfo["Driver"];\par
        $table = $tableName ? $tableName : $this->m_MainTable;\par
        $column = $idCloumnName ? $idCloumnName : $this->getField("Id")->m_Column;\par
\par
        try\par
        \{\par
            $newId = $genIdService->getNewID($this->m_IdGeneration, $db, $dbType, $table, $column);\par
        \}\par
        catch (Exception $e)\par
        \{\par
            $this->m_ErrorMessage = $e->getMessage();\par
            return false;\par
        \}\par
        return $newId;\par
    \}\par
}
}
{\xe \v getJoinFields\:BizDataObj}
{\xe \v BizDataObj\:getJoinFields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getJoinFields ( {\i $joinDataObj})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get all fields that belong to the same join of the input field\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b BizDataObj}\cell }{{\i $joinDataObj} \cell }{the join data object \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid array joined fields array \par
}}{
Definition at line 786 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        // get the maintable of the joindataobj\par
        $joinTable = $joinDataObj->m_MainTable;\par
        $returnRecord = array();\par
\par
        // find the proper join according to the maintable\par
        foreach ($this->m_TableJoins as $tableJoin)\par
        \{\par
            if ($tableJoin->m_Table == $joinTable)\par
            \{\par
                // populate the column-fieldvalue to columnRef-fieldvalue\par
                // get the field mapping to the column, then get the field value\par
                $joinFieldName = $joinDataObj->m_BizRecord->getFieldByColumn($tableJoin->m_Column); // joined-main table\par
\par
                if (!$joinFieldName) continue;\par
\par
                $refFieldName = $this->m_BizRecord->getFieldByColumn($tableJoin->m_ColumnRef); // join table\par
                $returnRecord[$refFieldName] = $joinFieldName;\par
\par
                // populate joinRecord's field to current record\par
                foreach ($this->m_BizRecord as $field)\par
                \{\par
                    if ($field->m_Join == $tableJoin->m_Name)\par
                    \{\par
                        // use join column to match joinRecord field's column\par
                        $jFieldName = $joinDataObj->m_BizRecord->getFieldByColumn($field->m_Column); // joined-main table\par
                        $returnRecord[$field->m_Name] = $jFieldName;\par
                    \}\par
                \}\par
                break;\par
            \}\par
        \}\par
        return $returnRecord;\par
    \}\par
}
}
{\xe \v getOnAuditFields\:BizDataObj}
{\xe \v BizDataObj\:getOnAuditFields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getOnAuditFields ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get auditable fields\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid array list of {\b BizField} objects who are auditable \par
}}{
Definition at line 748 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        $fieldList = array();\par
        foreach ($this->m_BizRecord as $field)\par
        \{\par
            if ($field->m_OnAudit)\par
                $fieldList[] = $field;\par
        \}\par
        return $fieldList;\par
    \}\par
}
}
{\xe \v insertRecord\:BizDataObj}
{\xe \v BizDataObj\:insertRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
insertRecord ( {\i $recArr})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insert record using given input record array\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $recArr} \cell }{- associated array whose keys are field names of this {\b BizDataObj} \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean - if return false, the caller can call getErrorMessage to get the error. \par
}}{
Definition at line 460 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if ( $this->_isNeedGenerateId($recArr) )\par
            $recArr["Id"] = $this->generateId();    // for certain cases, id is generated before insert\par
\par
        $this->m_BizRecord->setInputRecord($recArr);\par
\par
        if (!$this->validateInput()) return false;\par
\par
        $db = $this->getDBConnection("WRITE");\par
\par
        try\par
        \{\par
            $sql = $this->getSQLHelper()->buildInsertSQL($this, $joinValues);\par
            if($sql)\par
            \{\par
                $bindValues = QueryStringParam::getBindValues();\par
                $bindValueString = QueryStringParam::getBindValueString();\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Insert Sql = $sql"."; BIND: $bindValueString");\par
                QueryStringParam::reset();\par
                $db->query($sql, $bindValues);                \par
            \}\par
            //$mainId = $db->lastInsertId();\par
            if ( $this->_isNeedGenerateId($recArr) )\par
            \{\par
             $this->m_db = $db; //compatiable for CLI mode and also speed up of it running\par
                $mainId = $this->generateId(false);\par
                $recArr["Id"] = $mainId;\par
            \}\par
            BizSystem::log(LOG_DEBUG, "DATAOBJ", "New record Id is ".$recArr["Id"]);\par
        \}\par
        catch (Exception $e)\par
        \{\par
            BizSystem::log(LOG_ERR, "DATAOBJ", "Query Error : " . $e->getMessage());\par
            $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
            throw new BDOException($this->m_ErrorMessage);\par
            return null;\par
        \}\par
\par
        $this->m_BizRecord->setInputRecord($recArr);\par
\par
        if ($this->_postUpdateLobFields($recArr) === false)\par
        \{\par
            $this->m_ErrorMessage = $db->ErrorMsg();\par
            return false;\par
        \}\par
\par
        $this->cleanCache();\par
\par
        $this->m_RecordId = $recArr["Id"];\par
        $this->m_CurrentRecord = null;\par
\par
        $this->_postInsertRecord($recArr);\par
\par
        return $recArr["Id"];\par
    \}\par
}
}
{\xe \v joinRecord\:BizDataObj}
{\xe \v BizDataObj\:joinRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
joinRecord ( {\i $joinDataObj},  {\i $joinName} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pick the joined object's current record to the current record\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b BizDataObj}\cell }{{\i $joinDataObj} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{string\cell }{{\i $joinName} \cell }{name of join (optional) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid array return a modified record with joined record data \par
}}{
Definition at line 829 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        // get the maintable of the joindataobj\par
        $joinTable = $joinDataObj->m_MainTable;\par
        $joinRecord = null;\par
        $returnRecord = array();\par
\par
        // find the proper join according to join name and the maintable\par
        foreach ($this->m_TableJoins as $tableJoin)\par
        \{\par
            if (($joinName == $tableJoin->m_Name || $joinName == "")\par
                    && $tableJoin->m_Table == $joinTable)\par
            \{\par
                // populate the column-fieldvalue to columnRef-fieldvalue\par
                // get the field mapping to the column, then get the field value\par
                $joinFieldName = $joinDataObj->m_BizRecord->getFieldByColumn($tableJoin->m_Column); // joined-main table\par
                if (!$joinFieldName) continue;\par
                if (!$joinRecord)\par
                    $joinRecord = $joinDataObj->getActiveRecord();\par
                $refFieldName = $this->m_BizRecord->getFieldByColumn($tableJoin->m_ColumnRef); // join table\par
                $returnRecord[$refFieldName] = $joinRecord[$joinFieldName];\par
                // populate joinRecord's field to current record\par
                foreach ($this->m_BizRecord as $fld)\par
                \{\par
                    if ($fld->m_Join == $tableJoin->m_Name)\par
                    \{\par
                        // use join column to match joinRecord field's column\par
                        $jfldname = $joinDataObj->m_BizRecord->getFieldByColumn($fld->m_Column); // joined-main table\par
                        $returnRecord[$fld->m_Name] = $joinRecord[$jfldname];\par
                    \}\par
                \}\par
                break;\par
            \}\par
        \}\par
        // return a modified record with joined record data\par
        return $returnRecord;\par
    \}\par
}
}
{\xe \v newRecord\:BizDataObj}
{\xe \v BizDataObj\:newRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
newRecord ()}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create an empty new record\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid array - empty record array with default values \par
}}{
Definition at line 389 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        $recArr = $this->m_BizRecord->getEmptyRecordArr();\par
\par
        // if association is 1-M, set the field (pointing to the column) value as the FieldRefVal\par
        if ($this->m_Association["Relationship"] == "1-M")\par
        \{\par
            foreach ($this->m_BizRecord as $field)\par
            \{\par
                if ($field->m_Column == $this->m_Association["Column"] && !$field->m_Join)\par
                \{\par
                    $recArr[$field->m_Name] = $this->m_Association["FieldRefVal"];\par
                    break;\par
                \}\par
            \}\par
        \}\par
\par
        return $recArr;\par
    \}\par
}
}
{\xe \v processCascadeAction\:BizDataObj}
{\xe \v BizDataObj\:processCascadeAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
processCascadeAction ( {\i $objRef},  {\i $cascadeType}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 629 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if (($cascadeType=='Delete' && $objRef->m_OnDelete)\par
            || ($cascadeType=='Update' && $objRef->m_OnUpdate))\par
        \{\par
            if ($objRef->m_Relationship == "1-M" || $objRef->m_Relationship == "1-1") \{\par
                $table = $objRef->m_Table;\par
                $column = $objRef->m_Column;\par
                $column2 = $objRef->m_Column2;\par
            \}\par
            else if ($objRef->m_Relationship == "M-M" || $objRef->m_Relationship == "Self-Self") \{\par
                $table = $objRef->m_XTable;\par
                $column = $objRef->m_XColumn1;\par
            \}\par
            $refField = $this->getField($objRef->m_FieldRef);\par
            $fieldVal = $this->getFieldValue($objRef->m_FieldRef);\par
            \par
            $fieldVal2 = $this->getFieldValue($objRef->m_FieldRef2);\par
            if (!$fieldVal) return;      \par
            if($column2)\{     \par
             if (!$fieldVal2) return;\par
            \}\par
\par
            $db = $this->getDBConnection("WRITE");\par
            // get the cascade action sql\par
            if ($cascadeType=='Delete') \{\par
                if ($objRef->m_OnDelete == "Cascade") \{\par
                    $sql = "DELETE FROM ".$table." WHERE ".$column."='".$fieldVal."'";\par
                    if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}\par
                \}\par
                else if ($objRef->m_OnDelete == "SetNull") \{\par
                    $sql = "UPDATE ".$table." SET $column=null WHERE ".$column."='".$fieldVal."'";\par
                 if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}\par
                \}\par
                else if ($objRef->m_OnDelete == "Restrict") \{\par
                    // check if objRef has records\par
                    $refObj = $this->getRefObject($objRef->m_Name);  \par
                 $sql = "`$column`='".$refField->m_Value."'";\par
                    if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}                  \par
                    if (count($refObj->directFetch($sql,1)) == 1) \{\par
                        throw new BDOException($this->getMessage("DATA_UNABLE_DEL_REC_CASCADE",array($objRef->m_Name)));\par
                    \}\par
                    return;\par
                \}\par
            \}\par
            else if ($cascadeType=='Update') \{\par
                // check if the column value is actually changed\par
                if ($refField->m_OldValue == $refField->m_Value) return;\par
                \par
                if ($objRef->m_OnUpdate == "Cascade") \{\par
                    $sql = "UPDATE ".$table." SET $column='".$refField->m_Value."' WHERE ".$column."='".$refField->m_OldValue."'";\par
                  if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}\par
                \}\par
                else if ($objRef->m_OnUpdate == "SetNull") \{\par
                    $sql = "UPDATE ".$table." SET $column=null WHERE ".$column."='".$refField->m_OldValue."'";\par
                 if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}\par
                \}\par
                else if ($objRef->m_OnUpdate == "Restrict") \{\par
                    // check if objRef has records\par
                    $refObj = BizSystem::getObject($objRef->m_Name);\par
     $sql = "[".$objRef->m_FieldRef."]='".$refField->m_OldValue."'";\par
                    if($column2 && $fieldVal2)\{\par
                     $sql .= " AND ".$column2."='".$fieldVal2."'";  \par
                    \}\par
                    if (count($refObj->directFetch($sql,1)) == 1) \{\par
                        throw new BDOException($this->getMessage("DATA_UNABLE_UPD_REC_CASCADE",array($objRef->m_Name)));\par
                    \}\par
                    return;\par
                \}\par
            \}\par
            try \{\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Cascade $cascadeType Sql = $sql");\par
                $db->query($sql);\par
            \}\par
            catch (Exception $e) \{\par
                BizSystem::log(LOG_Err, "DATAOBJ", "Cascade $cascadeType Error: ".$e->getMessage());\par
                $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
                throw new BDOException($this->m_ErrorMessage);\par
            \}\par
        \}\par
    \}\par
}
}
{\xe \v removeRecord\:BizDataObj}
{\xe \v BizDataObj\:removeRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
removeRecord ( {\i $recArr}, & {\i $isParentObjUpdated})}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove a record from current record set of current association relationship\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $recArr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{boolean\cell }{{\i &$isParentObjUpdated} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 890 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        return BizDataObj_Assoc::removeRecord($this, $recArr, $isParentObjUpdated);\par
    \}\par
}
}
{\xe \v updateRecord\:BizDataObj}
{\xe \v BizDataObj\:updateRecord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
updateRecord ( {\i $recArr},  {\i $oldRecord} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update record using given input record array\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $recArr} \cell }{- associated array whose keys are field names of this {\b BizDataObj} \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $oldRecord} \cell }{- associated array who is the old record field name / value pairs \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean - if return false, the caller can call GetErrorMessage to get the error. \par
}}{
Definition at line 227 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if (!$this->canUpdateRecord($oldRecord))\par
        \{\par
            $this->m_ErrorMessage = BizSystem::getMessage("DATA_NO_PERMISSION_UPDATE",$this->m_Name);\par
            throw new BDOException($this->m_ErrorMessage);\par
            return false;\par
        \}\par
\par
        if (!$oldRecord)\par
            $oldRecord = $this->getActiveRecord();\par
\par
        if (!$recArr["Id"])\par
            $recArr["Id"] = $this->getFieldValue("Id");\par
\par
        // save the old values\par
        $this->m_BizRecord->saveOldRecord($oldRecord);\par
        // set the new values\par
        $this->m_BizRecord->setInputRecord($recArr);\par
\par
        if (!$this->validateInput()) return false;\par
        \par
        QueryStringParam::reset();\par
\par
        $sql = $this->getSQLHelper()->buildUpdateSQL($this);\par
\par
        if ($sql)\par
        \{\par
            $db = $this->getDBConnection("WRITE");\par
            $db->beginTransaction();\par
            try\par
            \{\par
                $this->cascadeUpdate(); // cascade update\par
                \par
                $bindValues = QueryStringParam::getBindValues();\par
                $bindValueString = QueryStringParam::getBindValueString();\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Update Sql = $sql"."; BIND: $bindValueString");\par
                QueryStringParam::reset();\par
                $db->query($sql, $bindValues);\par
                \par
                $db->commit();\par
            \}\par
            catch (Exception $e)\par
            \{\par
                $db->rollBack();\par
                if ($e instanceof BDOException)\par
                    throw $e;\par
                else \{\par
                    BizSystem::log(LOG_ERR, "DATAOBJ", "Query error : ".$e->getMessage());\par
                    $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
                    throw new BDOException($this->m_ErrorMessage);\par
                \}\par
                return false;\par
            \}\par
\par
            $this->cleanCache(); //clean cached data\par
            $this->_postUpdateLobFields($recArr);\par
            $this->m_CurrentRecord = null; \par
            $this->_postUpdateRecord($recArr);\par
        \}\par
        return true;\par
    \}\par
}
}
{\xe \v updateRecords\:BizDataObj}
{\xe \v BizDataObj\:updateRecords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
updateRecords ( {\i $setValue},  {\i $condition} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 290 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if (!$this->canUpdateRecordCondition())\par
        \{\par
            $this->m_ErrorMessage = BizSystem::getMessage("DATA_NO_PERMISSION_UPDATE",$this->m_Name);\par
            return false;\par
        \}\par
  /*当$setValue是数组时转成[field]=value格式*/\par
  if(is_array($setValue))\{\par
   $setValue_srt='';\par
   foreach($setValue as $key=>$value)\{\par
    if($value!='')\{\par
     $setValue_srt.=$setValue_srt?",[$key]='$value'":"[$key]='$value'";\par
    \}\par
   \}\par
   $setValue=$setValue_srt; \par
  \} \par
        $sql = $this->getSQLHelper()->buildUpdateSQLwithCondition($this,$setValue ,$condition);\par
        $db = $this->getDBConnection("WRITE");\par
 \par
        try\par
        \{\par
            if($sql)\par
            \{  // delete joint table first then delete main table's data'\par
                BizSystem::log(LOG_DEBUG, "DATAOBJ", "Delete Sql = $sql"); \par
                $db->query($sql);\par
            \}\par
        \}\par
        catch (Exception $e)\par
        \{\par
            BizSystem::log(LOG_ERR, "DATAOBJ", "Query error : ".$e->getMessage());\par
            $this->m_ErrorMessage = $this->getMessage("DATA_ERROR_QUERY").": ".$sql.". ".$e->getMessage();\par
            throw new BDOException($this->m_ErrorMessage);\par
            return false;\par
        \}\par
\par
        //clean cached data\par
        $this->cleanCache();\par
        return true;\par
    \}\par
}
}
{\xe \v validateInput\:BizDataObj}
{\xe \v BizDataObj\:validateInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
validateInput ()}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validate user input data and trigger error message and adjust {\b BizField} if invalid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 46 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        $this->m_ErrorFields = array();\par
        foreach($this->m_BizRecord->m_InputFields as $fld)\par
        \{\par
\par
            /* @var $bizField BizField */\par
            $bizField = $this->m_BizRecord->get($fld);\par
            if($bizField->m_Encrypted=="Y")\{\par
             if ($bizField->checkRequired() == true &&\par
                     ($bizField->m_Value===null || $bizField->m_Value === ""))\par
             \{\par
                 $this->m_ErrorMessage = $this->getMessage("DATA_FIELD_REQUIRED",array($fld));\par
                 $this->m_ErrorFields[$bizField->m_Name] = $this->m_ErrorMessage;\par
             \}\par
             continue;\par
            \}\par
            if ($bizField->checkRequired() == true &&\par
                    ($bizField->m_Value===null || $bizField->m_Value === ""))\par
            \{\par
                $this->m_ErrorMessage = $this->getMessage("DATA_FIELD_REQUIRED",array($fld));\par
                $this->m_ErrorFields[$bizField->m_Name] = $this->m_ErrorMessage;\par
            \}\par
            elseif ($bizField->m_Value!==null && $bizField->checkValueType() == false)\par
            \{\par
                $this->m_ErrorMessage = $this->getMessage("DATA_FIELD_INCORRECT_TYPE", array($fld, $bizField->m_Type));\par
                $this->m_ErrorFields[$bizField->m_Name] = $this->m_ErrorMessage;\par
            \}\par
            elseif ($bizField->m_Value!==null && $bizField->Validate() == false)\par
            \{\par
\par
                /* @var $validateService validateService */\par
                $validateService = BizSystem::getService(VALIDATE_SERVICE);\par
                $this->m_ErrorMessage = $validateService->getErrorMessage($bizField->m_Validator, $bizField->m_Name);\par
                if ($this->m_ErrorMessage == false)\par
                \{ //Couldn't get a clear error message so let's try this\par
                    $this->m_ErrorMessage = $this->getMessage("DATA_FIELD_INVALID_INPUT",array($fld,$value,$bizField->m_Validator));                //\par
                \}\par
                $this->m_ErrorFields[$bizField->m_Name] = $this->m_ErrorMessage;\par
            \}\par
        \}\par
        if (count($this->m_ErrorFields)>0)\par
        \{\par
            //print_r($this->m_ErrorFields);\par
            throw new ValidationException($this->m_ErrorFields);\par
            return false;\par
        \}\par
\par
        // validate uniqueness\par
        if ($this->validateUniqueness() == false)\par
            return false;\par
\par
        return true;\par
    \}\par
}
}
{\xe \v validateUniqueness\:BizDataObj}
{\xe \v BizDataObj\:validateUniqueness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
validateUniqueness (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Validate uniqueness Uniqueness = "fld1,fld2;fld3,fld4;..."\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid boolean \par
}}{
Definition at line 107 of file BizDataObj.php.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{\par
        if (!$this->m_Uniqueness)\par
            return true;\par
        $groupList = explode(";",$this->m_Uniqueness);\par
        foreach ($groupList as $group)\par
        \{\par
            $searchRule = "";\par
            $needCheck = true;\par
            $fields = explode(",",$group);\par
            foreach ($fields as $fld)\par
            \{\par
                $bizField = $this->m_BizRecord->get($fld);\par
                if ($bizField->m_Value===null || $bizField->m_Value === "" || $bizField->m_Value==$bizField->m_OldValue)\par
                \{\par
                    $needCheck = false;\par
                    break;\par
                \}\par
                if ($searchRule == "")\par
                    $searchRule = "[".$bizField->m_Name."]='".addslashes($bizField->m_Value)."'";\par
                else\par
                    $searchRule .= " AND [".$bizField->m_Name."]='".addslashes($bizField->m_Value)."'";\par
            \}\par
            if ($needCheck)\par
            \{\par
                $recordList = $this->directFetch($searchRule, 1);                \par
                if ($recordList->count()>0)\par
                \{\par
                    $this->m_ErrorMessage = $this->getMessage("DATA_NOT_UNIQUE",array($group));\par
                    foreach ($fields as $fld)\par
                    \{\par
                        $this->m_ErrorFields[$fld] = $this->m_ErrorMessage;\par
                    \}\par
                \}\par
            \}\par
        \}\par
        if (count($this->m_ErrorFields)>0)\par
        \{\par
            throw new ValidationException($this->m_ErrorFields);\par
            return false;\par
        \}\par
        return true;\par
    \}\par
}
}
}